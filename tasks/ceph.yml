---
- name: Install parted
  package:
    name: parted
    state: present
  become: true

- name: Prepare journal devices
  command: "parted {{ item }} -a optimal -s -- mklabel gpt"
  with_items: "{{ bc_ceph_journal_devices }}"
  when: bc_ceph_bootstrap_confirmation == "i-know-what-i-am-doing"
  become: true

- name: Create journal partitions
  command: "parted {{ item.journal }} -a optimal -s -- mkpart KOLLA_CEPH_OSD_BOOTSTRAP_{{ item.osd | basename }}_J {{ bc_ceph_journal_size|int * item.journal_id }}{{ 'GiB' if item.journal_id > 0 else '%' }} {{ (bc_ceph_journal_size|int * item.journal_id + bc_ceph_journal_size|int) }}GiB"
  with_items: "{{ bc_ceph_osd_devices }}"
  when: bc_ceph_bootstrap_confirmation == "i-know-what-i-am-doing"
  become: true

- name: Check alignment of journal partitions
  command: "parted {{ item.journal }} align-check optimal {{ (item.journal_id|int + 1) }}"
  register: parted
  failed_when: "'{{ (item.journal_id|int + 1) }} aligned' != parted.stdout"
  with_items: "{{ bc_ceph_osd_devices }}"
  become: false

- name: Prepare osd devices
  command: "parted {{ item.osd }} -a optimal -s -- mklabel gpt mkpart KOLLA_CEPH_OSD_BOOTSTRAP_{{ item.osd | basename }} '0%' '100%'"
  with_items: "{{ bc_ceph_osd_devices }}"
  when: bc_ceph_bootstrap_confirmation == "i-know-what-i-am-doing"
  become: true

- name: Check alignment of osd devices
  command: "parted {{ item.osd }} align-check optimal 1"
  register: parted
  failed_when: "'1 aligned' != parted.stdout"
  with_items: "{{ bc_ceph_osd_devices }}"
  become: false
